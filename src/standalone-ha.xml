<?xml version='1.0' encoding='UTF-8'?>

<server xmlns="urn:jboss:domain:1.3">
	<extensions>
		<extension module="com.jboss.datagrid" />
		<extension module="org.jboss.as.clustering.infinispan" />
		<extension module="org.jboss.as.clustering.jgroups" />
		<extension module="org.jboss.as.connector" />
		<extension module="org.jboss.as.jdr" />
		<extension module="org.jboss.as.jmx" />
		<extension module="org.jboss.as.logging" />
		<extension module="org.jboss.as.modcluster" />
		<extension module="org.jboss.as.naming" />
		<extension module="org.jboss.as.remoting" />
		<extension module="org.jboss.as.security" />
		<extension module="org.jboss.as.threads" />
		<extension module="org.jboss.as.transactions" />
		<extension module="org.jboss.as.web" />
	</extensions>
	<management>
		<security-realms>
			<security-realm name="ManagementRealm">
				<authentication>
					<properties path="mgmt-users.properties" relative-to="jboss.server.config.dir" />
				</authentication>
			</security-realm>
			<security-realm name="ApplicationRealm">
				<authentication>
					<properties path="application-users.properties"
						relative-to="jboss.server.config.dir" />
				</authentication>
			</security-realm>
		</security-realms>
		<management-interfaces>
			<native-interface security-realm="ManagementRealm">
				<socket-binding native="management-native" />
			</native-interface>
			<http-interface security-realm="ManagementRealm">
				<socket-binding http="management-http" />
			</http-interface>
		</management-interfaces>
	</management>
	<profile>
		<subsystem xmlns="urn:jboss:domain:logging:1.1">
			<console-handler name="CONSOLE">
				<level name="INFO" />
				<formatter>
					<pattern-formatter pattern="%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%E%n" />
				</formatter>
			</console-handler>
			<periodic-rotating-file-handler name="FILE">
				<formatter>
					<pattern-formatter pattern="%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%E%n" />
				</formatter>
				<file relative-to="jboss.server.log.dir" path="server.log" />
				<suffix value=".yyyy-MM-dd.HH" />
				<append value="true" />
			</periodic-rotating-file-handler>
			<logger category="com.arjuna">
				<level name="WARN" />
			</logger>
			<logger category="org.apache.tomcat.util.modeler">
				<level name="WARN" />
			</logger>
			<logger category="sun.rmi">
				<level name="WARN" />
			</logger>
			<logger category="jacorb">
				<level name="WARN" />
			</logger>
			<logger category="jacorb.config">
				<level name="ERROR" />
			</logger>
			<root-logger>
				<level name="INFO" />
				<handlers>
					<handler name="CONSOLE" />
					<handler name="FILE" />
				</handlers>
			</root-logger>
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:datagrid:1.0">
			<!-- 
				worker-threads:设置NioServerSocketChannelFactory的工作线程. default:2*CPU core 
				idle-timeout:设置Netty中TimeoutEnabledChannelPipelineFactory的超时时间. default:-1 
				tcp-nodelay：Setting to improve TCP protocol performance. default:true 
				receive-buffer-size：The 	TCP/UDP buffer sizes to be used during inbound communication. Size is bytes. 	default:0 
				send-buffer-size：The TCP/UDP buffer sizes to be used during outbound communication. Size is bytes. default:0 
			-->
			<hotrod-connector socket-binding="hotrod"
				cache-container="ots" worker-threads="32" tcp-nodelay="true"
				receive-buffer-size="65535" send-buffer-size="65535">
				<!-- 
					lazy-retrieval:设置是否topology state transfer，如果true，则topologyCacheConfig.setFetchInMemoryState(true) 	default: false 
					lock-timeout:Maximum time to attempt a particular lock acquisition. 	default:10000 
					replication-timeout：This is the timeout used to wait for an acknowledgment when making a remote call, after which the call is aborted 
					     and an exception is thrown. default:10000 
					update-timeout：未使用. 30000 
					external-host：127.0.0.1 
					external-port： 
				-->
				<topology-state-transfer lazy-retrieval="false"
					lock-timeout="1000" replication-timeout="5000" />
			</hotrod-connector>
			<!-- <memcached-connector socket-binding="memcached" cache-container="ots"/> 
				<rest-connector virtual-server="default-host" cache-container="ots"/> -->
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:datasources:1.0">
			<datasources />
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:infinispan:1.3"
			default-cache-container="ots">
			<!-- 
				name： 
				jndi-name： 
				start：cache container是否在服务启动时启动 default：true 
				istener-executor： 
				eviction-executor： 
				replication-queue-executor： 
				module： 
			-->
			<cache-container name="ots" default-cache="default">
				<!-- 
				   lock-timeout:获取分布式事物锁超时时间，在同一时刻只能有一个缓存在做state transfer or rehashing 
					executor：定义异步transport通信执行者 
					stack：定义jgroups stack 
					cluster：定义集群名称 
				-->
				<transport executor="infinispan-transport" lock-timeout="60000" />
				<!-- 
					mode：缓存模式：ASYNC、SYNC 
					async-marshalling:是否异步序列化 
					virtual-nodes：虚拟节点 
					owners：数据复制份数 
					remote-timeout：远程调用超时时间 default：17500 
					start：是否在服务启动时启动缓存 default：LAZY 
					l1-lifespan: 
					batching： 
					indexing：NONE,LOCAL,ALL 
					jndi-name: 
				-->
				<distributed-cache name="default" mode="SYNC"
					virtual-nodes="1" owners="2" remote-timeout="30000" start="EAGER">
					<!-- 
						isolation：隔离级别：READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE 		default：REPEATABLE_READ 
						acquire-timeout：尝试获取一个特定锁的做大时间 default：15000 
						concurrency-level：锁容器的并发级别，该值需要根据Infinispan并发线程数进行调整 	default：1000 
						striping： 是否用一个共享锁池维护所有缓存实体，如果否，缓存中每一个实体都会创建一个锁 Lock striping helps control memory footprint but may reduce concurrency in the system. 
						default：false 
					-->
					<locking isolation="READ_COMMITTED" acquire-timeout="30000"
						concurrency-level="1000" striping="false" />
					<!-- 
						mode:NONE, NON_XA, NON_DURABLE_XA, FULL_XA default：NONE 
						stop-timeout：当缓存停止时候，infinispan等待远程和本地事物结束的时间 	default：30000 
						locking：OPTIMISTIC or PESSIMISTIC default：OPTIMISTIC 
					-->
					<transaction mode="NON_XA" />
					<!-- 
						max-idle：缓存最大时间 default：-1 
						lifespan：缓存超时后最大存活时间 default：-1 
						interval：定时清楚超时缓存的时间间隔 
						default：5000 
					-->
					<expiration max-idle="1800000" interval="10000" />
					<!-- 
						strategy：策略：'UNORDERED', 'FIFO', 'LRU', 'LIRS' and 'NONE' default：NONE 
						max-entries：缓存的最大个数 default：10000
					-->
					<eviction strategy="1800000" max-entries="10000" />
					<!-- 
						enabled：如果为true，则在启动时候会询问邻居节点状态 default：true 
						chunk-size：批量转移实体的大小，单位bytes 
						default：10000 timeout：等待邻居缓存状态的超时时间 default:60000 
					-->
					<state-transfer enabled="true" timeout="10000"
						chunk-size="10000" />
				</distributed-cache>
			</cache-container>
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:jca:1.1">
			<archive-validation enabled="true" fail-on-error="true"
				fail-on-warn="false" />
			<bean-validation enabled="true" />
			<default-workmanager>
				<short-running-threads>
					<core-threads count="50" />
					<queue-length count="50" />
					<max-threads count="50" />
					<keepalive-time time="10" unit="seconds" />
				</short-running-threads>
				<long-running-threads>
					<core-threads count="50" />
					<queue-length count="50" />
					<max-threads count="50" />
					<keepalive-time time="10" unit="seconds" />
				</long-running-threads>
			</default-workmanager>
			<cached-connection-manager />
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:jdr:1.0" />
		<subsystem xmlns="urn:jboss:domain:jgroups:1.1"
			default-stack="${jboss.default.jgroups.stack:udp}">
			<stack name="udp">
				<transport type="UDP" socket-binding="jgroups-udp">
					<property name="timer_type">new</property>
					<property name="timer.min_threads">4</property>
					<property name="timer.max_threads">4</property>
					<property name="timer.keep_alive_time">5000000000</property>
					<property name="timer.queue_max_size">500</property>
					<property name="thread_pool.enabled">true</property>
					<property name="thread_pool.min_threads">200</property>
					<property name="thread_pool.max_threads">200</property>
					<property name="thread_pool.keep_alive_time">5000000000</property>
					<property name="thread_pool.queue_enabled">true</property>
					<property name="thread_pool.queue_max_size">100000</property>
					<property name="thread_pool.rejection_policy">discard</property>
					<property name="oob_thread_pool.enabled">true</property>
					<property name="oob_thread_pool.min_threads">200</property>
					<property name="oob_thread_pool.max_threads">200</property>
					<property name="oob_thread_pool.keep_alive_time">1000000000</property>
					<property name="oob_thread_pool.queue_enabled">true</property>
					<property name="oob_thread_pool.queue_max_size">100000</property>
					<property name="oob_thread_pool.rejection_policy">discard</property>
				</transport>
				<protocol type="PING">
					<property name="timeout">5000</property>
					<property name="num_initial_members">5</property>
				</protocol>
				<protocol type="MERGE2" />
				<protocol type="FD_SOCK" socket-binding="jgroups-udp-fd" />
				<protocol type="FD_ALL" />
				<protocol type="pbcast.NAKACK" />
				<protocol type="UNICAST2">
					<property name="timeout">300,600,1200</property>
					<property name="stable_interval">5000</property>
					<property name="max_bytes">1m</property>
				</protocol>
				<protocol type="pbcast.STABLE">
					<property name="stability_delay">500</property>
					<property name="desired_avg_gossip">5000</property>
					<property name="max_bytes">1m</property>
				</protocol>
				<protocol type="pbcast.GMS" />
				<protocol type="UFC">
					<property name="max_credits">200k</property>
					<property name="min_threshold">0.20</property>
				</protocol>
				<protocol type="MFC">
					<property name="max_credits">200k</property>
					<property name="min_threshold">0.20</property>
				</protocol>
				<protocol type="FRAG2">
					<property name="frag_size">8000</property>
				</protocol>
				<protocol type="RSVP">
					<property name="timeout">60000</property>
					<property name="resend_interval">500</property>
					<property name="ack_on_delivery">false</property>
				</protocol>
			</stack>
			<stack name="tcp">
				<transport type="TCP" socket-binding="jgroups-tcp">
					<property name="timer_type">new</property>
					<property name="timer.min_threads">4</property>
					<property name="timer.max_threads">4</property>
					<property name="timer.keep_alive_time">5000000000</property>
					<property name="timer.queue_max_size">500</property>
					<property name="thread_pool.enabled">true</property>
					<property name="thread_pool.min_threads">200</property>
					<property name="thread_pool.max_threads">200</property>
					<property name="thread_pool.keep_alive_time">5000000000</property>
					<property name="thread_pool.queue_enabled">true</property>
					<property name="thread_pool.queue_max_size">100000</property>
					<property name="thread_pool.rejection_policy">discard</property>
					<property name="oob_thread_pool.enabled">true</property>
					<property name="oob_thread_pool.min_threads">200</property>
					<property name="oob_thread_pool.max_threads">200</property>
					<property name="oob_thread_pool.keep_alive_time">1000000000</property>
					<property name="oob_thread_pool.queue_enabled">true</property>
					<property name="oob_thread_pool.queue_max_size">100000</property>
					<property name="oob_thread_pool.rejection_policy">discard</property>
				</transport>
				<protocol type="MPING" socket-binding="jgroups-mping" />
				<protocol type="MERGE2" />
				<protocol type="FD_SOCK" socket-binding="jgroups-tcp-fd" />
				<protocol type="FD" />
				<protocol type="VERIFY_SUSPECT" />
				<protocol type="pbcast.NAKACK">
					<property name="use_mcast_xmit">false</property>
				</protocol>
				<protocol type="UNICAST2">
					<property name="timeout">300,600,1200</property>
					<property name="stable_interval">5000</property>
					<property name="max_bytes">1m</property>
				</protocol>
				<protocol type="pbcast.STABLE">
					<property name="stability_delay">500</property>
					<property name="desired_avg_gossip">5000</property>
					<property name="max_bytes">1m</property>
				</protocol>
				<protocol type="pbcast.GMS" />
				<protocol type="UFC">
					<property name="max_credits">200k</property>
					<property name="min_threshold">0.20</property>
				</protocol>
				<protocol type="MFC">
					<property name="max_credits">200k</property>
					<property name="min_threshold">0.20</property>
				</protocol>
				<protocol type="FRAG2" />
				<protocol type="RSVP">
					<property name="timeout">60000</property>
					<property name="resend_interval">500</property>
					<property name="ack_on_delivery">false</property>
				</protocol>
			</stack>
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:jmx:1.1">
			<show-model value="true" />
			<remoting-connector />
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:modcluster:1.1">
			<mod-cluster-config advertise-socket="modcluster"
				connector="ajp">
				<dynamic-load-provider>
					<load-metric type="busyness" />
				</dynamic-load-provider>
			</mod-cluster-config>
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:naming:1.2" />
		<subsystem xmlns="urn:jboss:domain:remoting:1.1">
			<connector name="remoting-connector" socket-binding="remoting"
				security-realm="ApplicationRealm" />
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:security:1.1">
			<security-domains>
				<security-domain name="other" cache-type="default">
					<authentication>
						<login-module code="Remoting" flag="optional">
							<module-option name="password-stacking" value="useFirstPass" />
						</login-module>
						<login-module code="RealmUsersRoles" flag="required">
							<module-option name="usersProperties"
								value="${jboss.server.config.dir}/application-users.properties" />
							<module-option name="rolesProperties"
								value="${jboss.server.config.dir}/application-roles.properties" />
							<module-option name="realm" value="ApplicationRealm" />
							<module-option name="password-stacking" value="useFirstPass" />
						</login-module>
					</authentication>
				</security-domain>
				<security-domain name="jboss-web-policy" cache-type="default">
					<authorization>
						<policy-module code="Delegating" flag="required" />
					</authorization>
				</security-domain>
			</security-domains>
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:threads:1.1">
			<thread-factory name="infinispan-factory" group-name="infinispan"
				priority="5" />
			<unbounded-queue-thread-pool name="infinispan-transport">
				<max-threads count="25" />
				<keepalive-time time="0" unit="milliseconds" />
				<thread-factory name="infinispan-factory" />
			</unbounded-queue-thread-pool>
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:transactions:1.1">
			<core-environment>
				<process-id>
					<uuid />
				</process-id>
			</core-environment>
			<recovery-environment socket-binding="txn-recovery-environment"
				status-socket-binding="txn-status-manager" />
			<coordinator-environment default-timeout="300" />
		</subsystem>
		<subsystem xmlns="urn:jboss:domain:web:1.1"
			default-virtual-server="default-host" native="false">
			<connector name="http" protocol="HTTP/1.1" scheme="http"
				socket-binding="http" />
			<connector name="ajp" protocol="AJP/1.3" scheme="http"
				socket-binding="ajp" />
			<virtual-server name="default-host"
				enable-welcome-root="false">
				<alias name="localhost" />
				<alias name="example.com" />
			</virtual-server>
		</subsystem>
	</profile>
	<interfaces>
		<interface name="management">
			<inet-address value="${jboss.bind.address.management:127.0.0.1}" />
		</interface>
		<interface name="public">
			<inet-address value="${jboss.bind.address:127.0.0.1}" />
		</interface>
		<interface name="clustering">
			<inet-address value="${jboss.clustering.bind.address:127.0.0.1}" />
		</interface>
	</interfaces>
	<socket-binding-group name="standard-sockets"
		default-interface="public" port-offset="${jboss.socket.binding.port-offset:0}">
		<socket-binding name="management-native" interface="management"
			port="${jboss.management.native.port:9999}" />
		<socket-binding name="management-http" interface="management"
			port="${jboss.management.http.port:9990}" />
		<socket-binding name="management-https" interface="management"
			port="${jboss.management.https.port:9443}" />
		<socket-binding name="ajp" interface="management" port="8009" />
		<socket-binding name="hotrod" interface="management"
			port="11222" />
		<socket-binding name="http" interface="management"
			port="8080" />
		<socket-binding name="https" interface="management"
			port="8443" />
		<socket-binding name="jgroups-mping" interface="clustering"
			port="0" multicast-address="${jboss.default.multicast.address:234.99.54.14}"
			multicast-port="45700" />
		<socket-binding name="jgroups-tcp" interface="clustering"
			port="7600" />
		<socket-binding name="jgroups-tcp-fd" interface="clustering"
			port="57600" />
		<socket-binding name="jgroups-udp" interface="clustering"
			port="55200" multicast-address="${jboss.default.multicast.address:234.99.54.14}"
			multicast-port="45688" />
		<socket-binding name="jgroups-udp-fd" interface="clustering"
			port="54200" />
		<socket-binding name="memcached" interface="management"
			port="11211" />
		<socket-binding name="modcluster" port="0"
			multicast-address="224.0.1.115" multicast-port="23364" />
		<socket-binding name="remoting" port="4447" />
		<socket-binding name="txn-recovery-environment" port="4712" />
		<socket-binding name="txn-status-manager" port="4713" />
	</socket-binding-group>
</server>
